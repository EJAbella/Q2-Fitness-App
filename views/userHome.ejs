<!DOCTYPE html>
<html lang="en" dir="ltr">

<head>
  <meta charset="utf-8">
  <title></title>
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.3.1/css/all.css" integrity="sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU" crossorigin="anonymous">
  <link href="https://stackpath.bootstrapcdn.com/bootswatch/4.1.3/materia/bootstrap.min.css" rel="stylesheet" integrity="sha384-5bFGNjwF8onKXzNbIcKR8ABhxicw+SC1sjTh6vhSbIbtVgUuVTm2qBZ4AaHc7Xr9" crossorigin="anonymous">
  <link href="https://fonts.googleapis.com/css?family=ABeeZee" rel="stylesheet">
  <link rel="stylesheet" href="/style.css">
  <link rel="stylesheet" href="/nav.css">
  <script src="https://sdk.amazonaws.com/js/aws-sdk-2.41.0.min.js"></script>
</head>

<body>
  <title>Fitness - Home</title>
  <style media="screen">
    nav {
      overflow-y: hidden;
      padding-right: 100px;
    }
    img {
      height: 130px;
    }
    body {
      font-family: 'ABeeZee', sans-serif;
      /* background-color: #181D27; */
      background-image: url('https://www.providence-hotel.com/wp-content/uploads/fitness-header.jpg');
      background-position: center;
      background-repeat: no-repeat;
      background-size: cover;
      height: 100vh;
      padding-top: 0px;
      background-color: #70798C;
    }
    .weekday-card {
      text-align: center;
      box-sizing: border-box;
      display: inline-block;
      border: 1px solid black;
      height: 250px;
      width: 250px;
      padding: 45px 10px;
      margin: 20px 30px;
      border-radius: 25px;
      background-color: whitesmoke;
    }
    #dayTitle {
      height: 50px;
      overflow-y: scroll;
    }

    .title-card {
      background-color: rgba(33, 150, 243, 0.8);
      border-radius: 30px;
      color: whitesmoke;
      padding: 10px 20px 10px 0px;
      text-align: center;
      box-shadow: 1px 10px 10px rgba(0,0,0,.5);
    }

    a {
      color: whitesmoke;
    }

    h2 {
      border-bottom: solid .5px;
    }
    h3 {
      margin-bottom: 20px;
    }

    .workout:hover{
      color:white;
      text-decoration: none;
    }

    .profile-container {
      height: 100vh;
      padding: 20px 50px;
      overflow: scroll;
    }
    .cards {
      text-align: center;
      float:left;
      width: 75%;
      text-align: center;
      display: inline-block;
    }
    .leaderboard {
      font-size: 18px;
      text-align: center;
      background-color: whitesmoke;
      margin: 30px 0px;
      padding: 20px;
      border: 10px solid #2196F3;
      min-width: 300px;
      height: 500px;
    }
    .leaderboard-cont {
      text-align: center;
      display: inline-block;
    }
    .trainer {
      padding-top: 9px;
      padding-left: 20px;
      color: white;
      font-size: 24px;
      float: left;
    }
    .trainer:hover {
      color: rgb(40, 210, 25);
      cursor: pointer;
    }

    /* CHAT STYLE */

    input#wisdom {
      padding: 4px;
      font-size: 1em;
      width: 400px
    }

    input::placeholder {
      color: #ccc;
      font-style: italic;
    }

    p.userRequest {
      margin: 4px;
      padding: 4px 10px 4px 10px;
      border-radius: 4px;
      min-width: 50%;
      max-width: 85%;
      float: left;
      background-color: #7d7;
    }

    p.lexResponse {
      color: white;
      margin: 4px;
      padding: 4px 10px 4px 10px;
      border-radius: 4px;
      text-align: right;
      min-width: 50%;
      max-width: 85%;
      float: right;
      background-color: #3a88d0;
      font-style: italic;
    }

    p.lexError {
      margin: 4px;
      padding: 4px 10px 4px 10px;
      border-radius: 4px;
      text-align: right;
      min-width: 50%;
      max-width: 85%;
      float: right;
      background-color: #f77;
    }

    #conversation {
      width: 400px;
      height: 400px;
      border: 1px solid #ccc;
      background-color: #eee;
      padding: 4px;
      overflow: scroll
    }

    .trainerBot {
      padding: 0px;
      height: 0px;
      width: 0px;
      overflow-x: hidden;
      position: fixed;
      z-index: 10;
      display: block;
      transition: height 1s, width 1s, padding 1s;
      background-color: rgba(159, 159, 159, 0.85);
      border-radius: 10px;
    }

    /* .... */
  </style>
  </head>

  <body>
    <nav>

      <button type="button" class="btn btn-success" style="font-family:arial" id="menu">&equiv;</button>
      <img style="float:right" src="http://kravegym.com/krave/wp-content/uploads/2016/05/FYP-Krave-Fitness-Gym-Slogan.png" alt="">

    </nav>
    <div class="" id='menuBar'>
      <div class="menuLink">
        <a href="/userHome">Home</a><br>
      </div>
      <div class="menuLink">
      <a href="/userHome/macros">Macros</a><br>
      </div>
      <div class="menuLink">
      <a href="/userHome/profile">Profile</a>
      </div>
      <div class="menuLink">
        <a href="/userHome/logout">Logout</a>
      </div>
    </div>

    <div class="profile-container">

    <h1 class="title-card"><div class="trainer"><i class="far fa-comment"></i></div><b><%= user.name %>'s Fitness Plan</h1>
    <!-- CHATBOT -->
    <div class="trainerBot">
      <div id="conversation"></div>
      <form autocomplete="off" id="chatform" style="margin-top: 10px" onsubmit="return pushChat();">
        <input type="text" id="wisdom" size="80" value="" placeholder="Ask your Trainer...">
      </form>
    </div>
    <!-- ... -->


    <hr>
    <div class="">

    <div class="cards">
      <div class="weekday-card">
        <h2>Monday</h2>
        <p contenteditable="true" id='dayTitle'>Enter Workout Name...</p>
        <button type="button" class="btn btn-primary"><a class="workout" href="/workout/1">Workouts</a></button>
      </div>
      <div class="weekday-card">
        <h2>Tuesday</h2>
        <p contenteditable="true" id='dayTitle'>Enter Workout Name...</p>
        <button type="button" class="btn btn-primary"><a class="workout" href="/workout/2">Workouts</a></button>
      </div>
      <div class="weekday-card">
        <h2>Wendesday</h2>
        <p contenteditable="true" id='dayTitle'>Enter Workout Name...</p>
        <button type="button" class="btn btn-primary"><a class="workout" href="/workout/3">Workouts</a></button>
      </div>
      <div class="weekday-card">
        <h2>Thursday</h2>
        <p contenteditable="true" id='dayTitle'>Enter Workout Name...</p>
        <button type="button" class="btn btn-primary"><a class="workout" href="/workout/4">Workouts</a></button>
      </div>
      <div class="weekday-card">
        <h2>Friday</h2>
        <p contenteditable="true" id='dayTitle'>Enter Workout Name...</p>
        <button type="button" class="btn btn-primary"><a class="workout" href="/workout/5">Workouts</a></button>
      </div>
      <div class="weekday-card">
        <h2>Saturday</h2>
        <p contenteditable="true" id='dayTitle'>Enter Workout Name...</p>
        <button type="button" class="btn btn-primary"><a class="workout" href="/workout/6">Workouts</a></button>
      </div>
      <div class="weekday-card">
        <h2>Sunday</h2>
        <p contenteditable="true" id='dayTitle'>Enter Workout Name...</p>
        <button type="button" class="btn btn-primary"><a class="workout" href="/workout/7">Workouts</a></button>
      </div>
    </div>
    <div class="leaderboard-cont">
    <div class="leaderboard">
      <i style="font-size: 24px" class="fas fa-award"></i>
      <h3><b>Leaderboard</h3>
      <h3><i class="fas fa-trophy"></i> <b><%= allUsers[0].name %>: <%= allUsers[0].points %></h3>
      <% for(let i=1; i<allUsers.length; i++) { %>
        <p><%= allUsers[i].name %>: <%= allUsers[i].points %></p>
      <% } %>
    </div>
    </div>
    </div>
    </div>

    <script src="/script.js" charset="utf-8"></script>
  </body>

  <script type="text/javascript">
  const menu = document.querySelector('#menu')
  const menuBar = document.querySelector('#menuBar')
  const profileCont = document.querySelector('.profile-container')
  const trainer = document.querySelector('.trainer')
  const trainerBot = document.querySelector('.trainerBot')


    window.onclick = (e) => {
      if(e.target !== menuBar && e.target !== menu) {
        menuBar.style.width = "0px";
        profileCont.style.marginLeft = '0px'
      }
    }
    menu.onclick = () => {
      menuBar.style.width = '200px';
      profileCont.style.marginLeft = '200px'
    }

    let active = false;
    trainer.onclick = () => {
      if(!active) {
        trainerBot.style.width = '450px'
        trainerBot.style.height = '500px'
        trainerBot.style.padding = '25px'
        active = true;
      } else {
        trainerBot.style.width = '0px'
        trainerBot.style.height = '0px'
        trainerBot.style.padding = '0px'
        active = false;
      }
    }

    // CHAT LOGIC
		document.getElementById("wisdom").focus();

		AWS.config.region = ''; // Region
		AWS.config.credentials = new AWS.CognitoIdentityCredentials({
			IdentityPoolId: '', // Credentials
		});

		var lexruntime = new AWS.LexRuntime();
		var lexUserId = 'chatbot-demo' + Date.now();
		var sessionAttributes = {};


		function pushChat() {

			var wisdomText = document.getElementById('wisdom');
			if (wisdomText && wisdomText.value && wisdomText.value.trim().length > 0) {

				var wisdom = wisdomText.value.trim();
				wisdomText.value = '...';
				wisdomText.locked = true;

				var params = {
					botAlias: '$LATEST',
					botName: 'FitnessForFriends',
					inputText: wisdom,
					userId: lexUserId,
					sessionAttributes: sessionAttributes
				};
				showRequest(wisdom);
				lexruntime.postText(params, function(err, data) {
					if (err) {
						console.log(err, err.stack);
						showError('Error:  ' + err.message + ' (see console for details)')
					}
					if (data) {
						sessionAttributes = data.sessionAttributes;
						showResponse(data);
					}
					wisdomText.value = '';
					wisdomText.locked = false;
				});
			}
			return false;
		}

		function showRequest(daText) {

			var conversationDiv = document.getElementById('conversation');
			var requestPara = document.createElement("P");
			requestPara.className = 'userRequest';
			requestPara.appendChild(document.createTextNode(daText));
			conversationDiv.appendChild(requestPara);
			conversationDiv.scrollTop = conversationDiv.scrollHeight;
		}

		function showError(daText) {

			var conversationDiv = document.getElementById('conversation');
			var errorPara = document.createElement("P");
			errorPara.className = 'lexError';
			errorPara.appendChild(document.createTextNode(daText));
			conversationDiv.appendChild(errorPara);
			conversationDiv.scrollTop = conversationDiv.scrollHeight;
		}

		function showResponse(lexResponse) {

			var conversationDiv = document.getElementById('conversation');
			var responsePara = document.createElement("P");
			responsePara.className = 'lexResponse';
			if (lexResponse.message) {
				responsePara.appendChild(document.createTextNode(lexResponse.message));
				responsePara.appendChild(document.createElement('br'));
			}
			if (lexResponse.dialogState === 'ReadyForFulfillment') {
				responsePara.appendChild(document.createTextNode(
					'Ready for fulfillment'));
				// TODO:  show slot values
			} /*else {
				responsePara.appendChild(document.createTextNode(
					'(' + lexResponse.dialogState + ')'));
			}*/
			conversationDiv.appendChild(responsePara);
			conversationDiv.scrollTop = conversationDiv.scrollHeight;
		}

  </script>
</html>
